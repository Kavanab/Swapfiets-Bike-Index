{
    "root": true,
    "ignorePatterns": [
      "projects/**/*"
    ],
    "overrides": [
      {
        "files": [
          "*.ts"
        ],
        "parserOptions": {
          "project": [
            "tsconfig.json"
          ],
          "createDefaultProgram": true
        },
        "extends": [
          "plugin:@angular-eslint/recommended",
          "plugin:@angular-eslint/template/process-inline-templates"
        ],
        "rules": {
          "@typescript-eslint/naming-convention": [
            "error",
            {
              "selector": "variableLike",
              "format": [
                "camelCase",
                "snake_case",
                "UPPER_CASE",
                "PascalCase"
              ],
              "leadingUnderscore": "allow"
            },
            {
              "selector": "typeLike",
              "format": [
                "PascalCase"
              ]
            }
          ],
          "indent": "off",
          "@typescript-eslint/indent": [
            "error",
            4,
            {
              "ArrayExpression": "first",
              "CallExpression": {
                "arguments": "first"
              },
              "ImportDeclaration": "first",
              "FunctionDeclaration": {
                "parameters": "first"
              },
              "FunctionExpression": {
                "parameters": "first"
              },
              "ObjectExpression": "first",
              "SwitchCase": 1,
              "ignoredNodes": [
                "FunctionExpression > .params[decorators.length > 0]",
                "FunctionExpression > .params > :matches(Decorator, :not(:first-child))",
                "ClassBody.body > PropertyDefinition[decorators.length > 0] > .key"
              ]
            }
          ],
          "@typescript-eslint/quotes": [
            "error",
            "double",
            {
              "avoidEscape": true,
              "allowTemplateLiterals": true
            }
          ],
          "semi": "off",
          "@typescript-eslint/semi": [
            "error",
            "always"
          ],
          "@typescript-eslint/type-annotation-spacing": "error",
          "arrow-spacing": "error",
          "block-scoped-var": "error",
          "array-bracket-spacing": "error",
          "brace-style": "error",
        //   "camelcase": "error",
          "comma-dangle": [
            "error",
            "always-multiline"
          ],
          "comma-spacing": "error",
          "comma-style": "error",
          "curly": "error",
          "default-case": "error",
          "func-call-spacing": "error",
          "function-call-argument-newline": [
            "error",
            "consistent"
          ],
          "function-paren-newline": [
            "error",
            "consistent"
          ],
          "id-blacklist": [
            "error",
            "any",
            "Number",
            "number",
            "String",
            "string",
            "Boolean",
            "boolean",
            "Undefined"
          ],
          "id-match": "error",
          "max-len": [
            "error",
            {
              "code": 160
            }
          ],
          "new-parens": "error",
          // "no-console": [
          //   "error"
          // ],
          "no-empty-function": [
            "error",
            {
              "allow": [
                "arrowFunctions",
                "constructors"
              ]
            }
          ],
          "no-restricted-globals": [
            "error",
            "fdescribe",
            "fit"
          ],
          "no-multi-spaces": "error",
        //   "no-trailing-spaces": "error",
          "no-whitespace-before-property": "error",
          "space-before-blocks": "error",
          "space-before-function-paren": [
            "error",
            {
                "anonymous": "always",
                "named": "never",
                "asyncArrow": "always"
            }
          ],
          "space-in-parens": "error",
          "space-infix-ops": "error",
          "space-unary-ops": [
            "error",
            {
              "words": true,
              "nonwords": false
            }
          ],
          "switch-colon-spacing": "error",
          "template-curly-spacing": "error",
          "@angular-eslint/directive-selector": [
            "error",
            {
              "type": "attribute",
              "prefix": "app",
              "style": "kebab-case"
            }
          ],
          "@angular-eslint/component-selector": [
            "error",
            {
              "type": "element",
              "prefix": "app",
              "style": "kebab-case"
            }
          ],
          "@angular-eslint/no-inputs-metadata-property": "error",
          "@angular-eslint/no-outputs-metadata-property": "error",
          "@angular-eslint/no-host-metadata-property": "error",
          "@angular-eslint/no-attribute-decorator": "error",
          "@angular-eslint/no-input-rename": "error",
          "@angular-eslint/no-output-on-prefix": "error",
          "@angular-eslint/no-output-rename": "error",
          "@angular-eslint/no-forward-ref": "error",
          "@angular-eslint/use-lifecycle-interface": "error",
          "@angular-eslint/use-pipe-transform-interface": "error",
          "@angular-eslint/no-output-native": "error",
          "@angular-eslint/no-pipe-impure": "error",
          "@angular-eslint/no-conflicting-lifecycle": "error",
          "@angular-eslint/use-component-selector": "error",
          "@angular-eslint/no-queries-metadata-property": "error",
          "@angular-eslint/component-class-suffix": "error",
          "@angular-eslint/directive-class-suffix": "error",
          "@angular-eslint/prefer-on-push-component-change-detection": "error"
        }
      },
      {
        "files": [
          "*.html"
        ],
        "extends": [
          "plugin:@angular-eslint/template/recommended"
        ],
        "rules": {}
      }
    ]
  }
  